on_actions = {
	on_startup = {
		effect = {
			set_variable = {
				global.default_starvation_offset = 0.3
			}
			set_variable = {
				global.default_coal_penalty_multiplier = 0.3
			}
			for_each_scope_loop = {
				array = global.balkans_tags_array
				set_country_flag = rk_is_in_balkans
			}
			every_country = {
				set_variable = {
					coal_penalty_multiplier = global.default_coal_penalty_multiplier
				}
				if = {
					limit = {
						is_major = yes
					}
					set_variable = {
						coal_penalty_multiplier = 0.8
					}
				}
				# As this goes higher the effects of grain shortage gets worse
				# All balancing of food shortage effects should be done through this number
				# Changing this will have a parabolic effect
				# Increaseing or decreasing outside the range -1 thru 1 will not further amplify the effects
				if = {
					limit = {
						is_major = yes
					}
					set_variable = {
						severe_starvation_offset = 0.6
					}
				} else = {
					set_variable = {
						severe_starvation_offset = global.default_starvation_offset
					}
				}
				if = {
					limit = {
						is_major = no
					}
					add_to_variable = {
						grain_stockpile = 1000
					}
					add_to_variable = {
						coal_stockpile = 1000
					}
				}
				if = {
					limit = {
						is_italian_tag = yes
					}
					capital_scope = {
						add_extra_state_shared_building_slots = 1
						add_building_construction = {
							type = industrial_complex
							level = 1
							instant_build = yes
						}
					}
				}
			}
			# Nationalist France
			NFA = {
				add_offsite_building = {
					type = industrial_complex
					level = -5
				}
				add_offsite_building = {
					type = arms_factory
					level = -1
				}
				capital_scope = {
					add_extra_state_shared_building_slots = 8
					add_building_construction = {
						type = industrial_complex
						level = 8
						instant_build = yes
					}
				}
			}
			# Netherlands
			HOL = {
				capital_scope = {
					add_extra_state_shared_building_slots = 1
					add_building_construction = {
						type = industrial_complex
						level = 1
						instant_build = yes
					}
				}
			}
			# Belgium
			BEL = {
				capital_scope = {
					add_extra_state_shared_building_slots = 1
					add_building_construction = {
						type = industrial_complex
						level = 1
						instant_build = yes
					}
				}
			}
		}
	}
	on_monthly = {
		effect = {
			ROOT = {
				# this makes it so that ai nations with very small economies do not have to deal with the grain/coal system until they get bigger. This does not take into consideration offsite buildings
				if = {
					limit = {
						NOT = {
							num_of_owned_factories > 4
						}
						is_ai = yes
					}
					set_variable = {
						grain_stockpile = grain_limit
					}
					set_variable = {
						coal_stockpile = coal_limit
					}
				}
				# grain balancing
				if = {
					limit = {
						check_variable = {
							severe_starvation_offset = 0
						}
					}
					set_variable = {
						severe_starvation_offset = global.default_starvation_offset
					}
				} else_if = {
					limit = {
						num_of_controlled_factories < 25
					}
					set_variable = {
						severe_starvation_offset = 0.3
					}
				} else_if = {
					limit = {
						check_variable = {
							severe_starvation_offset < 0.6
						}
					}
					add_to_variable = {
						severe_starvation_offset = 0.05
					}
				}
				# coal balancing
				if = {
					limit = {
						is_major = yes
						check_variable = {
							coal_penalty_multiplier < 0.8
						}
					}
					add_to_variable = {
						coal_penalty_multiplier = 0.05
					}
				} else_if = {
					limit = {
						check_variable = {
							num_of_controlled_factories > 25
						}
						check_variable = {
							coal_penalty_multiplier < 0.5
						}
					}
					add_to_variable = {
						coal_penalty_multiplier = 0.05
					}
				} else_if = {
					limit = {
						check_variable = {
							coal_penalty_multiplier = 0 
						}
					}
					set_variable = {
						coal_penalty_multiplier = global.default_coal_penalty_multiplier
					}
				}
			}
			add_to_variable = {
				global.monthly_increment = 1
			}
		}
	}
}
